@model _5032Project_v2.Models.Appointment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/css/tempusdominus-bootstrap-4.min.css" />

<style>
    .navigate-link {
        display: inline-block;
        margin-top: 5px;
        padding: 5px 10px;
        background-color: #42f4e8;
        color: black;
        text-decoration: none;
        border-radius: 4px;
    }

        .navigate-link:hover {
            background-color: #357abd;
            color: black;
        }
</style>

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Appointment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.DisplayName("First Name of Patient:")
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.DisplayName("Last Name of Patient:")
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.DisplayName("Select a Date and Time Slot:")
            <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                @Html.TextBoxFor(model => model.DateTime, new { @class = "form-control datetimepicker-input", data_toggle = "datetimepicker", data_target = "#datetimepicker1", data_val = "false" })
                <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                </div>
                @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr>
        <h4>@Html.DisplayName("Select a Clinic")</h4>
        <div id="map" style="height:300px; position: relative;">
            <div style="position: absolute; bottom: 10px; left: 10px; z-index: 1000;">
                <input type="text" id="clinicSearchInput" placeholder="Search for a clinic by name..." style="padding: 5px; border-radius: 5px;">
                <button type="button" id="searchClinicBtn">Search</button>
            </div>
        </div>
        @Html.HiddenFor(model => model.ClinicId, new { @id = "selectedClinicId" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.39.0/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>
        $(function () {
            $('#datetimepicker1').datetimepicker({
                format: 'DD/MM/YYYY hh:mm A',
                enabledHours: [8, 9, 10, 11, 12, 13, 14, 15, 16],
                stepping: 60,
                sideBySide: true,
                minDate: moment().startOf('day')
            }).on('change.datetimepicker', function (e) {
                $('#datetimepicker1').find('input').val(e.date.format('DD/MM/YYYY hh:mm A'));
            });
        });

        $('#datetimepicker1').on('change.datetimepicker', function (e) {
            var selectedDate = e.date.format('MM/DD/YYYY hh:mm A');
            var clinicId = $('#selectedClinicId').val();

            $.ajax({
                url: '@Url.Action("IsTimeSlotAvailable", "Appointments")',
                type: 'POST',
                data: { dateTime: selectedDate, clinicId: clinicId },
                success: function (isAvailable) {
                    if (!isAvailable) {
                        alert('This time slot is already booked for this clinic.');
                        $('#datetimepicker1').datetimepicker('clear');
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });

        var defaultIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        var selectedIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });

        function initializeMapAtCurrentLocation() {
            // Try to get the user's location
            navigator.geolocation.getCurrentPosition(function (position) {
                var userLocation = [position.coords.latitude, position.coords.longitude];

                // Set the map's view to user's location
                map.setView(userLocation, 13);

                // Optional: Add a marker to user's location
                L.marker(userLocation).addTo(map)
                    .bindPopup("You are here!")
                    .openPopup();
            }, function (error) {
                // If there's an error or user denies location request, set a default location
                map.setView([51.505, -0.09], 13);
            });
        }

        var map = L.map('map', { zoomControl: false });
        initializeMapAtCurrentLocation();

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
            maxZoom: 19,
        }).addTo(map);

        var allMarkers = [];

        var lastSelectedMarker = null;

        $.ajax({
            url: '@Url.Action("GetClinics", "Appointments")',
            type: 'GET',
            success: function (data) {
                data.forEach(function (clinic) {
                    var currentMarker = L.marker([clinic.Latitude, clinic.Longitude]).addTo(map)
                        .bindPopup(clinic.ClinicName + '<br><a href="#" class="navigate-link" data-lat="' + clinic.Latitude + '" data-lng="' + clinic.Longitude + '">Navigate</a>')
                        .on('click', function () {
                            // Change the marker icon to show it's selected
                            if (lastSelectedMarker) {
                                lastSelectedMarker.setIcon(defaultIcon);  // Reset the last selected marker to default
                            }
                            currentMarker.setIcon(selectedIcon);
                            lastSelectedMarker = currentMarker;

                            // Store the clinic's ID when the marker is clicked.
                            $('#selectedClinicId').val(clinic.Id);

                            // Display a confirmation message
                            alert('You have selected ' + clinic.ClinicName + '. Press Create to confirm the appointment.');
                        });

                    allMarkers.push({
                        name: clinic.ClinicName,
                        marker: currentMarker
                    });
                });
            }
        });

        map.on('popupopen', function (e) {
            $('.navigate-link').on('click', function () {
                var lat = $(this).data('lat');
                var lng = $(this).data('lng');

                // Open Google Maps in a new tab
                var googleMapsUrl = 'https://www.google.com/maps/dir/?api=1&destination=' + lat + ',' + lng;
                window.open(googleMapsUrl, '_blank');
            });
        });

        $('#searchClinicBtn').click(function () {
            var clinicName = $('#clinicSearchInput').val().toLowerCase();

            var found = false;
            allMarkers.forEach(function (m) {
                if (m.name.toLowerCase().includes(clinicName)) {
                    map.setView(m.marker.getLatLng(), 15);
                    m.marker.openPopup();
                    found = true;
                    return;
                }
            });

            if (!found) {
                alert('No clinic found with that name.');
            }
        });

        $('form').submit(function (e) {
            if (!$('#selectedClinicId').val()) {
                e.preventDefault();
                alert('Please select a clinic.');
            }
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mapbox")
}
